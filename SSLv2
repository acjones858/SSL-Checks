#!/bin/bash

websites=("panel.scalematrix.com" "scalematrix.com" "ddc-cabtech.com")  # Add your desired websites here
timeout_duration=60  # Timeout duration in seconds

for website in "${websites[@]}"; do
    echo "Checking SSL certificate for $website..."

    # Send request to SSL Labs API and store the response in a temporary file
    curl -s -o tmp.json --data "host=$website" https://api.ssllabs.com/api/v3/analyze
    
    # Wait for the grade to be available in the API response
    for ((i=0; i<timeout_duration; i++)); do
        status=$(jq -r '.status' tmp.json 2>/dev/null)
        
        if [[ $status == "READY" ]]; then
            break
        elif [[ $status == "ERROR" ]]; then
            echo "Failed to retrieve SSL information from the SSL Labs API."
            exit 1
        fi
        
        sleep 1
    done
    
    # Check if the grade is available
    if [[ $status == "READY" ]]; then
        grade=$(jq -r '.endpoints[0].grade' tmp.json)
        echo "Certificate grade: $grade"
        
        # Extract additional information (example: protocols, cipher suites)
        protocols=$(jq -r '.endpoints[0].details.protocols[].name' tmp.json)
        echo "Protocols: $protocols"
        
        cipherSuites=$(jq -r '.endpoints[0].details.suites[].name' tmp.json)
        echo "Cipher Suites: $cipherSuites"
        
        # Add more fields as needed based on the desired information from the API response
    else
        echo "Failed to retrieve the certificate grade within the timeout period."
        echo "Certificate grade: Unknown"
    fi
    
    echo ""
done

# Clean up the temporary file
rm tmp.json
